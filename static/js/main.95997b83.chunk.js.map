{"version":3,"sources":["firebase.js","calendarInfo.js","assets/baroqueFloral.png","Header.js","assets/ovalFrame.png","assets/arrow.png","assets/eyeOfHorus.jpg","assets/parchment.png","Calendar.js","assets/medieval2.jpg","assets/wing.png","EventDisplay.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","months","daysInAWeek","Header","date","month","getMonth","day","getDate","src","baroqueFloral","alt","className","Calendar","state","today","Date","calendarDate","userClicked","checkbox","chosenDate","savedDates","monthCalendar","year","getFullYear","weekdayOfFirstDay","getDay","numOfDaysInMonth","maxNumOfDays","this","getMaxNumberOfDays","nextDay","filledCalendar","i","push","toString","checkedDay","window","outerWidth","charAt","parseInt","index","callbackFunction","onClick","setState","newChosenDate","fillCalendar","uncheckCheckbox","props","onChange","type","name","id","checked","reset","chosenYear","chosenMonth","htmlFor","renderCheckbox","eyeOfHorus","parchment","arrow","previousMonth","nextMonth","map","displayDayInAWeek","entry","calendarEntry","getUserChosenDate","checkToday","Component","EventDisplay","events","images","proxyUrl","userInput","wing","changeEvent","change","event","text","checkedText","length","slice","imageUrl","stockImage","historicalYear","convertYear","renderEventNav","Footer","App","eventIndex","favourites","clicked","newEventIndex","database","ref","on","data","val","axios","url","method","responseType","then","response","Events","setUpDataBase","apiCall","getNewEvent","setUserChosenDate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95997b83.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n// Realtime database library\nimport 'firebase/database';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBPC2a8fvEGb0ztOU98Hnfxe_aug25_28I\",\n    authDomain: \"this-day-in-history-4b697.firebaseapp.com\",\n    databaseURL: \"https://this-day-in-history-4b697.firebaseio.com\",\n    projectId: \"this-day-in-history-4b697\",\n    storageBucket: \"this-day-in-history-4b697.appspot.com\",\n    messagingSenderId: \"51185937480\",\n    appId: \"1:51185937480:web:f6c2702a51f3b9ce7abc7d\"\n}\nfirebase.initializeApp( firebaseConfig );\n\nexport default firebase;","const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nconst daysInAWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n\nexport { months, daysInAWeek };","export default __webpack_public_path__ + \"static/media/baroqueFloral.45df6847.png\";","import { months } from './calendarInfo';\nimport baroqueFloral from './assets/baroqueFloral.png';\nimport ovalFrame from './assets/ovalFrame.png';\n\nconst Header = ( { date } ) => {\n    const month = months[date.getMonth()];\n    const day = date.getDate();\n    return (\n        <header>\n            <img src={baroqueFloral} alt=\"Baroque Floral Motif\" className=\"firstPiece\"/>\n            <img src={baroqueFloral} alt=\"Baroque Floral Motif\" className=\"secondPiece\"/>\n            <h3>{ month } { day }</h3>\n            <h1>In History</h1>\n        </header> \n    )\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/ovalFrame.ca7fb852.png\";","export default __webpack_public_path__ + \"static/media/arrow.ccd9f4d0.png\";","export default __webpack_public_path__ + \"static/media/eyeOfHorus.da01216a.jpg\";","export default __webpack_public_path__ + \"static/media/parchment.d140b6ec.png\";","import { Component } from 'react';\nimport { months, daysInAWeek } from './calendarInfo';\nimport arrow from './assets/arrow.png';\nimport eyeOfHorus from './assets/eyeOfHorus.jpg';\nimport parchment from './assets/parchment.png';\n\nclass Calendar extends Component {\n    constructor() {\n        super();\n        this.state = {\n            today: new Date(),\n            calendarDate: new Date(),\n            userClicked: false,\n            checkbox: false,\n            chosenDate: new Date(),\n            daysInAWeek: daysInAWeek,\n            savedDates: [],\n            monthCalendar: []\n        }\n    }\n    fillCalendar(date) {\n        const year = date.getFullYear();\n        const month = date.getMonth();\n        const firstDay = new Date(year, month, 1);\n        const weekdayOfFirstDay = firstDay.getDay();\n        const numOfDaysInMonth = new Date(year, month + 1, 0).getDate();\n        const maxNumOfDays = this.getMaxNumberOfDays(weekdayOfFirstDay, numOfDaysInMonth);\n        let nextDay = 1;\n        let filledCalendar = [];\n        for (let i = 0; i < maxNumOfDays; i++) {\n            if (i < weekdayOfFirstDay || i >= weekdayOfFirstDay + numOfDaysInMonth) {\n                filledCalendar.push('');\n            } else {\n                filledCalendar.push(this.toString(nextDay));\n                nextDay++;\n            }\n        }\n        return filledCalendar;\n    }\n    toString(day) {\n        if (day < 10) {\n            day = '0' + day;\n        } else {\n            day = '' + day;\n        }\n        return day;\n    }\n    getMaxNumberOfDays(weekdayOfFirstDay, numOfDaysInMonth) {\n        let maxNumOfDays = 35; // Default is a 5-week display\n        if (weekdayOfFirstDay + numOfDaysInMonth > 35) {\n            maxNumOfDays = 42; // 6-week display\n        } else if (weekdayOfFirstDay + numOfDaysInMonth === 28) {\n            maxNumOfDays = 28 // 4-week display for a normal year with February 1st on a Sunday\n        }\n        return maxNumOfDays;\n    }\n    displayDayInAWeek(day) {\n        let checkedDay = day;\n        if (window.outerWidth < 500) {\n            checkedDay = day.charAt(0);\n        }\n        return (<li key={day}>{checkedDay}</li>)\n    }\n    checkToday(date, day) {\n        return ( date.getFullYear() === this.state.today.getFullYear() && \n                 date.getMonth() === this.state.today.getMonth() && \n                 parseInt(day) === this.state.today.getDate() )\n    }\n    calendarEntry(day, index, today, callbackFunction) {\n        return (\n            <li\n                key={index}\n                className={`dayInMonth ${today}`}\n                onClick={ callbackFunction }\n            >\n                <span>{day.charAt(0)}</span>\n                <span>{day.charAt(1)}</span>\n            </li>\n        )\n    } \n    getUserChosenDate(year, month, day) {\n        const chosenDate = new Date(year, month, day);\n        this.setState({\n            userClicked: true,\n            checkbox: !this.state.checkbox,\n            chosenDate: chosenDate\n        });\n    }\n    nextMonth(year, month) {\n        month++;\n        if (month > 11) {\n            month = 0;\n            year++;\n        }\n        const newChosenDate = new Date(year, month);\n        this.setState({\n            calendarDate: newChosenDate,\n            monthCalendar: this.fillCalendar(newChosenDate)\n        });\n    }\n    previousMonth(year, month) {\n        month--;\n        if (month < 0) {\n            month = 11;\n            year--;\n        }\n        const newChosenDate = new Date(year, month);\n        this.setState({\n            calendarDate: newChosenDate,\n            monthCalendar: this.fillCalendar(newChosenDate)\n        });\n    }\n    uncheckCheckbox() {\n        if (this.state.checkbox) {\n            this.setState({\n                checkbox: !this.state.checkbox\n            });\n        }\n    }\n    reset() {\n        // this.uncheckCheckbox();\n        this.setState({\n            calendarDate: this.state.today,\n            monthCalendar: this.fillCalendar(this.state.today)\n        });\n    }\n\n    componentDidMount() {\n        this.setState({\n            monthCalendar: this.fillCalendar(this.state.today)\n        });\n    }\n\n    componentDidUpdate() {\n        this.uncheckCheckbox();\n        if (this.state.userClicked) {\n            this.props.onChange(this.state.chosenDate, this.state.userClicked);\n            this.setState({\n                userClicked: false\n            });\n        }\n    }\n\n    renderCheckbox() {\n        if (this.state.checkbox) {\n            return(\n                <input type=\"checkbox\" name=\"calendar\" id=\"calendar\" checked\n                    onClick={() => this.reset()} />\n            )\n        } else {\n            return (\n                <input type=\"checkbox\" name=\"calendar\" id=\"calendar\"\n                    onClick={() => this.reset()} />\n            )\n        }\n    }\n    \n    render() {\n        const date = this.state.today;\n        const chosenDate = this.state.calendarDate;\n        const chosenYear = chosenDate.getFullYear();\n        const chosenMonth = chosenDate.getMonth();\n        return (\n            <div className=\"calendar\">\n                <label htmlFor=\"calendar\" className=\"srOnly\">Choose a day</label>\n                {\n                    this.renderCheckbox()\n                }\n                <div className=\"calendarIcon\">\n                    <img src={eyeOfHorus} alt=\"select a date\" />\n                </div>\n                <img src={parchment} alt=\"parchment background\" className=\"parchment hidden\"/>\n                <div className=\"calendarNav hidden\">\n                    <img src={ arrow } alt=\"previous month\" className=\"leftArrow\" \n                         onClick={ () => this.previousMonth(chosenYear, chosenMonth) }/>\n                    <h3>{ months[chosenMonth] + ' ' + chosenYear }</h3>\n                    <img src={arrow} alt=\"previous month\" className=\"rightArrow\" \n                         onClick={() => this.nextMonth(chosenYear, chosenMonth)} />\n                </div>\n                <div className=\"calendarDisplay hidden\">\n                    {\n                        this.state.daysInAWeek.map( (day) => {\n                            return this.displayDayInAWeek(day);\n                        })\n                    }\n                    {\n                        this.state.monthCalendar.map( (day, index) => {\n                            let entry = this.calendarEntry(day, index, '', () => this.getUserChosenDate(chosenYear, chosenMonth, day) );\n                            if (day === '') {\n                                entry = this.calendarEntry(day, index, '');\n                            } else if (this.checkToday(chosenDate, day)) {\n                                entry = this.calendarEntry(day, index, 'today', () => this.getUserChosenDate(chosenYear, chosenMonth, day) );\n                            }\n                            return entry;\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Calendar;","export default __webpack_public_path__ + \"static/media/medieval2.35076ef2.jpg\";","export default __webpack_public_path__ + \"static/media/wing.4e18489d.png\";","import { Component } from 'react';\nimport stockImage from './assets/medieval2.jpg';\nimport wing from './assets/wing.png';\nimport axios from 'axios';\n\nclass EventDisplay extends Component {\n    constructor() {\n        super();\n        this.events = [];\n        this.images = [];\n        this.proxyUrl = `https://cors-anywhere.herokuapp.com/`;\n        this.state = {\n            events: [],\n            images: [],\n            userInput: 0\n        }\n    }\n\n    convertYear(year) {\n        if (year > 0) {\n            year = year + ' CE';\n        } else if (year < 0) {\n            year = year + ' BCE';\n        } else {\n            year = 'Year 0';\n        }\n        return year;\n    }\n    renderEventNav() {\n        return(\n            <div className=\"eventNav\">\n                <img src={wing} alt=\"previous event\" className=\"previousEvent\"\n                     onClick={() => this.changeEvent(-1)} />\n                <img src={wing} alt=\"next event\" className=\"nextEvent\"\n                     onClick={() => this.changeEvent(1)} />\n            </div>\n        )\n    }\n    changeEvent(change) {\n        this.setState({\n            userInput: change\n        })\n    }\n\n    componentDidMount() {\n        this.setState({\n            events: this.props.events\n        })\n    }\n\n    componentDidUpdate() {\n        if (this.events !== this.props.events) {\n            this.events = this.props.events;\n            this.setState({\n                events: this.props.events\n            });\n        }\n        if (this.state.userInput) {\n            this.props.onChange(this.state.userInput);\n            this.setState({\n                userInput: 0\n            });\n        }\n    }\n\n    render() {\n        return (\n            this.state.events.map( (event, index) => {\n                const { text, year } = event;\n                let checkedText = text;\n                if (text.charAt(text.length - 1) === ']') {\n                    checkedText = text.slice(0, text.length - 3);\n                }\n                let imageUrl = stockImage;\n                const altText = '';\n                const historicalYear = this.convertYear(year);\n                return (\n                    <div key={index} className=\"event\">\n                        <img src={imageUrl} alt={altText} />\n                        <div className=\"eventDescription\">\n                            <h3>{historicalYear}</h3>\n                            <p>{checkedText}</p>\n                        </div>\n                        {\n                            this.renderEventNav()\n                        }\n                    </div>\n                )\n            })\n        )\n    }\n}\n\nexport default EventDisplay;","const Footer = () => {\n    return(\n        <footer>\n            <p>Created at Juno College</p>\n        </footer>\n    )\n}\n\nexport default Footer;","import { Component } from 'react';\nimport firebase from './firebase';\nimport axios from 'axios';\nimport Header from './Header';\nimport Calendar from './Calendar';\nimport EventDisplay from './EventDisplay';\nimport Footer from './Footer';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.proxyUrl = `https://cors-anywhere.herokuapp.com/`;\n    this.state = {\n      today: new Date(),\n      chosenDate: new Date(),\n      userClicked: false,\n      eventIndex: 1,\n      events: [],\n      favourites: []\n    }\n  }\n\n  setUserChosenDate(date, clicked) {\n    this.setState({\n      chosenDate: date,\n      userClicked: clicked,\n      eventIndex: 1\n    });\n  }\n\n  getNewEvent(change) {\n    let newEventIndex = this.state.eventIndex + change;\n    if (newEventIndex < 1) {\n      newEventIndex = 1;\n    } else if (newEventIndex > this.state.events.length) {\n      newEventIndex = this.state.events.length;\n    }\n    this.setState({\n      eventIndex: newEventIndex\n    });\n  }\n\n  setUpDataBase() {\n    // Make reference to database\n    const dbRef = firebase.database().ref();\n    // Get data from database\n    let firebaseDataObj;\n    dbRef.on('value', (data) => {\n      firebaseDataObj = data.val();\n    });\n  }\n\n  apiCall() {\n    axios({\n      url: `${this.proxyUrl}http://history.muffinlabs.com/date/${this.state.chosenDate.getMonth() + 1}/${this.state.chosenDate.getDate()}`,\n      method: `GET`,\n      responseType: `json`\n    }).then((response) => {\n      this.setState({\n        events: response.data.data.Events\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.setUpDataBase();\n    this.apiCall();\n  }\n\n  componentDidUpdate() {\n    if (this.state.userClicked) {\n      this.apiCall();\n      this.setState({\n        userClicked: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header date={ this.state.chosenDate }/>\n\n        <section className=\"eventDisplay\">\n          <div className=\"wrapper\">\n            <EventDisplay \n              events={this.state.events.slice(this.state.eventIndex - 1, this.state.eventIndex)}\n              onChange={ (change) => this.getNewEvent(change) }  \n            />\n          </div> {/* closing wrapper */}\n        </section> {/* closing eventDisplay */}\n\n        <Calendar onChange={ (date, clicked) => this.setUserChosenDate(date, clicked) }/>\n        <Footer/>\n      </div> /* closing App */\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}